# data file for the Fltk User Interface Designer (fluid)
version 1.0107 
header_name {.h} 
code_name {.cxx}
class kvlImageThresholdingConsoleGUI {open
} {
  Function {kvlImageThresholdingConsoleGUI()} {open
  } {
    Fl_Window m_Window {
      label kvlImageThresholdingConsole
      callback {exit( 0 );} open
      xywh {637 24 1280 1030} type Double visible
    } {
      Fl_Group m_ImageViewer {
        callback {//this->SelectTriangleContainingPoint( Fl::event_x(), m_ImageViewer->h() - Fl::event_y() );} open
        xywh {10 10 1000 1000} box FLAT_BOX color 0
        code0 {\#include "kvlImageViewer.h"}
        class {kvl::ImageViewer}
      } {}
      Fl_Value_Slider m_OverlayOpacity {
        label {Overlay opacity:}
        callback {this->SetOverlayOpacity( m_OverlayOpacity->value() );}
        xywh {1070 40 175 25} type Horizontal align 1 step 0.01 textsize 14
      }
      Fl_Value_Slider m_CoronalSliceNumber {
        label {Coronal slice number:}
        callback {this->SetSliceLocation( 
  static_cast< unsigned int >( m_SagittalSliceNumber->value() ),
  static_cast< unsigned int >( m_CoronalSliceNumber->value() ),
  static_cast< unsigned int >( m_AxialSliceNumber->value() ) );}
        xywh {1070 127 175 25} type Horizontal align 1 step 1 textsize 14
      }
      Fl_Value_Slider m_SagittalSliceNumber {
        label {Sagittal slice number:}
        callback {m_CoronalSliceNumber->do_callback();}
        xywh {1070 222 175 25} type Horizontal align 1 step 1 textsize 14
      }
      Fl_Value_Slider m_AxialSliceNumber {
        label {Axial slice number:}
        callback {m_CoronalSliceNumber->do_callback();}
        xywh {1070 313 175 25} type Horizontal align 1 step 1 textsize 14
      }
      Fl_Group {} {
        label View open
        xywh {1095 376 124 109} box DOWN_BOX
      } {
        Fl_Round_Button m_ViewOne {
          callback {this->ShowSelectedView();}
          xywh {1105 383 29 29} type Radio down_box ROUND_DOWN_BOX align 16
        }
        Fl_Round_Button m_ViewTwo {
          callback {this->ShowSelectedView();}
          xywh {1185 382 27 28} type Radio down_box ROUND_DOWN_BOX
        }
        Fl_Round_Button m_ViewFour {
          callback {this->ShowSelectedView();}
          xywh {1185 448 25 29} type Radio down_box ROUND_DOWN_BOX
        }
        Fl_Round_Button m_ViewThree {
          callback {this->ShowSelectedView();}
          xywh {1105 451 24 21} type Radio down_box ROUND_DOWN_BOX
        }
        Fl_Round_Button m_ViewFive {
          callback {this->ShowSelectedView();}
          xywh {1140 415 30 27} type Radio down_box ROUND_DOWN_BOX value 1
        }
      }
      Fl_Browser m_ImageToThreshold {
        label {Image to threshold}
        callback {if ( o->value() )
  {
  this->SetImageToThreshold( o->value() - 1 );
  }}
        xywh {1030 525 220 135} type Hold align 1
      }
      Fl_Browser m_ImageToMask {
        label {Image to mask}
        callback {if ( o->value() )
  {
  this->SetImageToMask( o->value() - 1 );
  }}
        xywh {1030 800 220 135} type Hold align 1
      }
      Fl_Value_Slider m_LowerThreshold {
        label {Lower threshold::}
        callback {if ( m_LowerThreshold->value() > m_UpperThreshold->value() )
{
  m_LowerThreshold->value( m_UpperThreshold->value() );
}


this->SetThresholds( m_LowerThreshold->value(), m_UpperThreshold->value() );}
        xywh {1050 685 175 25} type Horizontal align 1 step 1 textsize 14
      }
      Fl_Value_Slider m_UpperThreshold {
        label {Upper threshold:}
        callback {if ( m_UpperThreshold->value() < m_LowerThreshold->value() )
{
  m_UpperThreshold->value( m_LowerThreshold->value() );
}


this->SetThresholds( m_LowerThreshold->value(), m_UpperThreshold->value() );}
        xywh {1050 740 175 25} type Horizontal align 1 step 1 textsize 14
      }
      Fl_Button {} {
        label {Mask image}
        callback {this->MaskImage();}
        xywh {1030 940 220 30}
      }
      Fl_Check_Button {} {
        label {Show inverse mask:}
        callback {if ( o->value() )
  {
  this->ShowInverseMask( true );
  }
else
  {
  this->ShowInverseMask( false );
  }}
        xywh {1205 80 40 20} down_box DOWN_BOX align 4
      }
      Fl_Button {} {
        label {Write mask}
        callback {this->WriteMask();}
        xywh {1030 975 220 30}
      }
    }
  }
  Function {~kvlImageThresholdingConsoleGUI()} {return_type virtual
  } {}
  Function {SetOverlayOpacity( float overlayOpacity )} {open return_type {virtual void}
  } {}
  Function {SetSliceLocation( unsigned int, unsigned int, unsigned int )} {open return_type {virtual void}
  } {}
  Function {ShowSelectedView()} {open return_type {virtual void}
  } {}
  Function {SetImageToThreshold( int )} {open return_type {virtual void}
  } {}
  Function {SetImageToMask( int )} {open return_type {virtual void}
  } {}
  Function {SetThresholds( float, float )} {open return_type {virtual void}
  } {}
  Function {MaskImage()} {open return_type {virtual void}
  } {}
  Function {ShowInverseMask( bool )} {open return_type {virtual void}
  } {}
  Function {WriteMask()} {open selected return_type {virtual void}
  } {}
} 
