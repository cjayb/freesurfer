-- -*- lua -*-

require "io"
require "os"
require( "tools.freesurfer" )

-- Make access to the FreeSurfer module quicker
local FS = tools.freesurfer


local inputFiles = FS.GetFiles( FS.MRIlabelDir(), "(.*.mgz)" )

-- Simple test name generator
local function testName( input, sc )
   local truncInput = string.match( input, "(.*).mgz" )
   return truncInput.."-"..sc
end

-- Generate a table of subtests
local function testGen( inputs, lblBegin, lblEnd )
   local testTable = {}

   local sixConnects = { 0, 1 }

   for i,input in ipairs(inputs) do
      for sc,sixConn in ipairs( sixConnects ) do
	 table.insert( testTable, { id=testName(input,sixConn),
                                    input=FS.MRIlabelDir()..input,
				    labelStart=lblBegin,
				    labelStop=lblEnd,
				    sixConnect=sixConn } )
      end
   end
   
   return testTable
end
				 

-- Table required by tm itself
testdescript = {

   -- Lengthier description of the test
   description = [[
	 Testing of MRImarkLabelBorderVoxels
   ]],

   -- Keywords (for subtest selection)
   keywords = { "mri", "basic" },

   -- Designate the test as active
   active = 1,

   -- The test name
   testName = "MRI_MarkLabelBorderVoxels_Test",

   -- The script to run the test case
   runScript = [[
         $(submit JOBNAME="$(id)", TIME="01:00:00" )

	 export INPUT="$(input)"

	 echo $INPUT
	 echo " ---------- "

	 ${TM_BIN_DIR}/mriMarkLabelBorderVoxelTest \--input=$INPUT \
	                                           \--start=$(labelStart) \
                                                   \--stop=$(labelStop) \
	                                           \--sixConnect=$(sixConnect)
	
	 echo " ---------- "
         ${TM_BIN_DIR}/mriMarkLabelBorderVoxelTest_cuda \--input=$INPUT \
	                                                \--start=$(labelStart) \
                                                        \--stop=$(labelStop) \
	                                                \--sixConnect=$(sixConnect)				   

	 echo " ---------- "

	 $(projectDir)/tools/mripairdiff.pl \--results=$(cmdResultFn) \
	                                    \--gold="cpu%03i.mgz" \
                                            \--cmp="gpu%03i.mgz" \
                                            \--thresh=0 \
                                            \--start=$(labelStart) \
                                            \--stop=$(labelStop)

         
	 testFinish -c $(cmdResultFn) -r $(resultFn) -t $(runtimeFn)
   ]],

   -- The list of tests to run
   tests = testGen( inputFiles, 0, 200 )
}
