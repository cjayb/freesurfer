-- -*- lua -*-

require "io"
require "os"
require( "tools.freesurfer" )

-- Make access to the FreeSurfer module quicker
local FS = tools.freesurfer

local inputDir = FS.ScratchDir().."/gcam/labelterm/postantconsist/"

-- Number of tests to perform (assume files are numbered from zero)
local nTests = 34

local function MRIname( testNum )
   return string.format( "mriLabelPostAntConsistInput%04d.mgz", testNum )
end

local function GCAMname( testNum )
   return string.format( "gcamLabelPostAntConsistInput%04d", testNum )
end

-- Generate a test name
local function testName( testNum )
   
   return "pac-"..testNum
end


-- Generate a table of subtests
local function testGen( numTests, lambdas )
   local testTable = {}

   for i=0,numTests-1 do
      local tName = testName( i )
      table.insert( testTable, { id=tName,
				 input=inputDir..GCAMname(i),
				 mri=inputDir..MRIname(i) } )
      end
   
   return testTable
end


-- Table required by tm itself
testdescript = {

   -- Lengthier description of the test
   description = [[
	 Testing of gcamLabelTermPostAntConsistency
   ]],

   -- Keywords (for subtest selection)
   keywords = { "gcam", "basic" },

   -- Designate the test as active
   active = 1,

   -- The test name
   testName = "GCAM_LabelTerm_PostAntConsist_Test",

   -- The script to run the test case
   runScript = [[
         $(submit JOBNAME="$(id)", TIME="00:15:00" )

	 export INPUT="$(input)"
	 export CPUOUT="$(outputDir)/$(id).cpu"
	 export GPUOUT="$(outputDir)/$(id).gpu"
	 export CPUMRI="$(outputDir)/$(id).cpu.mgz"
	 export GPUMRI="$(outputDir)/$(id).gpu.mgz"

	 echo $INPUT
	 echo " ---------- "

	 ${TM_BIN_DIR}/gcam_labelterm_postantconsist_test \--input=$INPUT \
	                                                  \--mri=$(mri) \
                                                          \--output=$CPUOUT \
	                                                  \--mrioutput=$CPUMRI
	
	 echo " ---------- "

         ${TM_BIN_DIR}/gcam_labelterm_postantconsist_test_cuda \--input=$INPUT \
	                                                       \--mri=$(mri) \
                                                               \--output=$GPUOUT \
	                                                       \--mrioutput=$GPUMRI


	 echo " ---------- "

	 $(projectDir)/tools/gcamMultiDiff.pl \--results=$(cmdResultFn) \
	                                      \--gold="$CPUOUT.nc" \
                                              \--cmp="$GPUOUT.nc" \
                                              \--config=$(testDir)/labelpostantconsist.config


	 if [ ! -e $(testDir)/keepResults ]; then
             rm "$CPUOUT.nc"
             rm "$GPUOUT.nc"
         fi

	 testFinish -c $(cmdResultFn) -r $(resultFn) -t $(runtimeFn)
   ]],

   -- The list of tests to run
   tests = testGen( nTests )
}
