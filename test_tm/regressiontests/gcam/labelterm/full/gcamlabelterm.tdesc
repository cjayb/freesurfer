-- -*- lua -*-

require "io"
require "os"
require( "tools.freesurfer" )

-- Make access to the FreeSurfer module quicker
local FS = tools.freesurfer

local inputDir = FS.ScratchDir().."/gcam/labelterm/full/"

-- Number of tests to perform (assume files are numbered from zero)
local nTests = 22

-- List of lambdas
local lambdas = { 0.1 }

-- List of label dists values
local labelDists = { 1 }



local function MRIname( testNum )
   return string.format( "mriLabelTermInput%04d.mgz", testNum )
end


local function GCAMname( testNum )
   return string.format( "gcamLabelTermInput%04d", testNum )
end

local function GCAname( testNum )
   return string.format( "gcaLabelTerm%04d.gca", testNum )
end

-- Generate a test name
local function testName( testNum, lambda, labelDist )   
   return testNum.."-"..lambda.."-"..labelDist
end


-- Generate a table of subtests
local function testGen( numTests, lambdas, labelDists )
   local testTable = {}
   
   for i=0,numTests-1 do
      for l,lambda in ipairs(lambdas) do
	 for ld,labelDist in ipairs(labelDists) do
	    local tName = testName( i, lambda, labelDist )
	    table.insert( testTable, { id=tName,
				       input=inputDir..GCAMname(i),
				       mri=inputDir..MRIname(i),
				       gca=inputDir..GCAname(i) } )
	 end
      end
   end
   
   return testTable
end


-- Table required by tm itself
testdescript = {

   -- Lengthier description of the test
   description = [[
	 Testing of gcamLabelTerm
   ]],

   -- Keywords (for subtest selection)
   keywords = { "gcam", "basic" },

   -- Designate the test as active
   active = 1,

   -- The test name
   testName = "GCAM_LabelTerm_Test",

   -- The script to run the test case
   runScript = [[
         $(submit JOBNAME="$(id)", TIME="00:15:00" )

	 export INPUT="$(input)"
	 export CPUOUT="$(outputDir)/$(id).cpu"
	 export GPUOUT="$(outputDir)/$(id).gpu"

	 echo $INPUT
	 echo " ---------- "

	 ${TM_BIN_DIR}/gcam_labelterm_test \--input=$INPUT \
	                                   \--mri=$(mri) \
                                           \--gca=$(gca) \
                                           \--output=$CPUOUT
	
	 echo " ---------- "

         ${TM_BIN_DIR}/gcam_labelterm_test_cuda \--input=$INPUT \
	                                        \--mri=$(mri) \
                                                \--gca=$(gca) \
                                                \--output=$GPUOUT

	 echo " ---------- "

	 $(projectDir)/tools/gcamMultiDiff.pl \--results=$(cmdResultFn) \
	                                      \--gold="$CPUOUT.nc" \
                                              \--cmp="$GPUOUT.nc" \
                                              \--config=$(testDir)/labelterm.config
 
         if [ ! -e $(testDir)/keepResults ]; then
             rm "$CPUOUT.nc"
             rm "$GPUOUT.nc"
         fi


	 testFinish -c $(cmdResultFn) -r $(resultFn) -t $(runtimeFn)
   ]],

   -- The list of tests to run
   tests = testGen( nTests, lambdas, labelDists )
}
