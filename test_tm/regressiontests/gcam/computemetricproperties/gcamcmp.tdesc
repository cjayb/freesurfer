-- -*- lua -*-

require "io"
require "os"
require( "tools.freesurfer" )

-- Make access to the FreeSurfer module quicker
local FS = tools.freesurfer

local inputFiles = FS.GetFiles( FS.GCAMdir(), "(gcam%d+).nc" )


-- Generate a table of subtests
local function testGen( inputs )
   local testTable = {}

   for i,input in ipairs(inputs) do
      table.insert( testTable, { id=input, input=FS.GCAMdir()..input } )
   end

   return testTable
end


-- Table required by tm itself
testdescript = {

   -- Lengthier description of the test
   description = [[
	 Testing of gcamComputeMetricProperties
   ]],

   -- Keywords (for subtest selection)
   keywords = { "gcam", "basic" },

   -- Designate the test as active
   active = 1,

   -- The test name
   testName = "GCAM_CMP_Test",

   -- The script to run the test case
   runScript = [[
         $(submit JOBNAME="$(id)", TIME="00:15:00" )

	 export INPUT="$(input)"
	 export CPUOUT="$(outputDir)/$(id).cpu"
	 export GPUOUT="$(outputDir)/$(id).gpu"

	 echo $INPUT

	 ${TM_BIN_DIR}/gcam_cmp_test \--input=$INPUT \
                                     \--output=$CPUOUT
	 ${TM_BIN_DIR}/gcam_cmp_test_cuda \--input=$INPUT \
                                          \--output=$GPUOUT

	 $(projectDir)/tools/gcamMultiDiff.pl \--results=$(cmdResultFn) \
	                                      \--gold="$CPUOUT.nc" \
                                              \--cmp="$GPUOUT.nc" \
                                              \--config=$(testDir)/cmp.config

         if [ ! -e $(testDir)/keepResults ]; then
             rm "$CPUOUT.nc"
             rm "$GPUOUT.nc"
         fi

	 testFinish -c $(cmdResultFn) -r $(resultFn) -t $(runtimeFn)
   ]],

   -- The list of tests to run
   tests = testGen( inputFiles )
}
