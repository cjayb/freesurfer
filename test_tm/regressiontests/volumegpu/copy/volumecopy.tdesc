-- -*- lua -*-


require "io"
require "os"
require( "tools.freesurfer" )

-- Make access to the FreeSurfer module quicker
local FS = tools.freesurfer


-- Function to return the list of files to use
local function GetFiles( pattern )
   return FS.GetFiles( FS.MRIdir(), pattern )
end

local inputFiles = GetFiles( "(.*\.mgz)" )

-- Generate a test name from the filename, kernel size and convolution direction
local function testName( input )
   local inputItems = FS.split( input, "-" )

   return inputItems[1].."-"..inputItems[2]
end


-- Generates one test configuration for each input, kernel size and convolution direction
local function testGen( inputs )
   local testTable = {}

   for i,input in ipairs(inputs) do
      local tName = testName( input )
      table.insert( testTable, { id=tName, input=FS.MRIdir()..input } )
   end

   return testTable
end



-- Table required by tm itself
testdescript = {

   -- Lengthier description of the test
   description = [[
	 A set of tests for the VolumeGPU::Copy method
   ]],

   -- Keywords (for subtest selection)
   keywords = { "basic", "mri" },

   -- Designate the test as active
   active = 1,

   -- The test name
   testName = "VolumeGPU::Copy_Test",

   -- The script to run the test case
   runScript = [[
         $(submit JOBNAME="$(id)", TIME="01:00:00" )

	 export INPUT="$(input)"
	 export OUTPUT="$(outputDir)/$(id).copy.mgz"

	 echo $MAINCMDS

	 $(TM_BIN_DIR)/volume_copy_test_cuda  \--input=$INPUT \
	                                      \--output=$OUTPUT

	 $(testDir)/volumediff.pl \--results=$(cmdResultFn) \
	                          \--gold=$INPUT \
                                  \--test=$OUTPUT \
                                  \--threshold=0
	 testFinish -c $(cmdResultFn) -r $(resultFn) -t $(runtimeFn)
   ]],

   -- The list of tests to run
   tests = testGen( inputFiles )
}