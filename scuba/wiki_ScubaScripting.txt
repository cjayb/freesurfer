||Up to ScubaGuide||Back to [:ScubaGuide/ScubaReference: ScubaReference]||

= Scripting =

[[TableOfContents]]

== Commands ==

Note that many commands take IDs, such as layerID, collectionID,
viewID, toolID, frameID, etc. These IDs are generated when the objects
they refer to are created. As input, they must refer to valid
objects. If they don't you'll receive an error. All IDs are integers.


[[Anchor(AddSegmentationToSegVolReport)]]
''Add``Segmentation``To``Seg``Vol``Report'' '''''structure'''''

 Adds a structure to the list of structures to be reported on.

[[Anchor(AddSegVolReportIntensityVolume)]]
''Add``Seg``Vol``Report``Intensity``Volume'' '''''volID'''''

 Add an intensity volume to the segmentation volume report.

[[Anchor(BeginValueRangeFillInView)]]
''Begin``Value``Range``Fill``In``View'' '''''viewID sourceVolID roiID destVolID'''''

 Begins a series of value range fills using the value ranges in sourceVolID to set values in destVolID. '''sourceVolID''' and '''destVolID''' are collectionIDs.

[[Anchor(CaptureFrameToFile)]]
''Capture``Frame``To``File'' '''''frameID fileName'''''

 Make a screen capture of the frame.

[[Anchor(ClearSegVolReport)]]
''Clear``Seg``Vol``Report''

 Clears all info in the segmentation volume report.

[[Anchor(ConvertWindowToViewRAS)]]
''Convert``Window``To``View``RAS'' '''''viewID windowX windowY'''''

 Returns the RAS coordinates of the input window coordinate. '''windowX''' and '''windowY''' should be integers.

[[Anchor(CopyViewLayersToAllViewsInFrame)]]
''Copy``View``Layers``To``All``Views``In``Frame'' '''''frameID viewID'''''

 Copies the layer settings in a view to all other views in a frame.

[[Anchor(DeleteCollectionROI)]]
''Delete``Collection``ROI'' '''''collectionID roiID'''''

 Deletes an ROI for this collection.

[[Anchor(DeleteDataCollection)]]
''Delete``Data``Collection'' '''''collectionID'''''

 Delete a data collection.

[[Anchor(DeleteLayer)]]
''Delete``Layer'' '''''layerID'''''

 Deletes a layer. Does not delete any data collections associated with it.

[[Anchor(DoOneValueRangeFillInView)]]
''Do``One``Value``Range``Fill``In``View'' '''''viewID beginValueRange endValueRange fillValue'''''

 Adds a single range to a series of value range fills. Must be between a call to ''BeginValueRangeFillInView'' and ''EndValueRangeFillInView''. '''beginValueRange''', '''endValueRange''', and '''fillValueRange''' should be values appropriate for the volume you are editing.

[[Anchor(DontUseROIInSegVolReport)]]
''Dont``Use``ROI``In``Seg``Vol``Report''

 Don't use an ROI in the segmentation volume report.

[[Anchor(EndValueRangeFillInView)]]
''End``Value``Range``Fill``In``View'' '''''viewID'''''

 Performs the series of value range fills specified by ''DoOneValueRangeFill''.

[[Anchor(ExportMarkersToControlPoints)]]
''Export``Markers``To``Control``Points'' '''''collectionID fileName'''''

 Writes the markers to a control.dat file using a volume collection to transform them.

[[Anchor(Flood2DMRIVolume)]]
''Flood``2DMRI``Volume'' '''''layerID x y z toolID viewID type'''''

 Floods the volume in a 2DMRIS layer at the input RAS point '''x''', '''y''', '''z''' (in RAS floating point coords), using the input tool and view for settings. Floods are of the following types: {{{voxelEditingNew}}}, {{{voxelEditingErase}}}, {{{roiEditingSelect}}}, {{{roiEditingUnselect}}}.

[[Anchor(Get2DMRILayerBrightness)]]
''Get``2DMRI``Layer``Brightness'' '''''layerID'''''

 Returns the brightness for this layer.

[[Anchor(Get2DMRILayerColorLUT)]]
''Get``2DMRI``Layer``Color``LUT'' '''''layerID'''''

 Returns the LUT id for this layer.

[[Anchor(Get2DMRILayerContrast)]]
''Get``2DMRI``Layer``Contrast'' '''''layerID'''''

 Returns the contrast for this layer.

[[Anchor(Get2DMRILayerColorMapMethod)]]
''Get``2DMRI``Layer``Color``Map``Method'' '''''layerID'''''

 Returns the color map method for this layer.

[[Anchor(Get2DMRILayerDrawMIP)]]
''Get``2DMRI``Layer``Draw``MIP'' '''''layerID'''''

 Returns the value of the property for drawingthe maximum intensity projection.

[[Anchor(Get2DMRILayerDrawZeroClear)]]
''Get``2DMRI``Layer``Draw``Zero``Clear'' '''''layerID'''''

 Returns the value of the property for drawingvalues of zero clear.

[[Anchor(Get2DMRILayerEditableROI)]]
''Get``2DMRI``Layer``Editable``ROI'' '''''layerID'''''

 Returns whether or not this layer's ROI is editable.

[[Anchor(Get2DMRILayerHeatScaleMax)]]
''Get``2DMRI``Layer``Heat``Scale``Max'' '''''layerID'''''

 Returns the heat scale max value for the layer.

[[Anchor(Get2DMRILayerHeatScaleMid)]]
''Get``2DMRI``Layer``Heat``Scale``Mid'' '''''layerID'''''

 Returns the heat scale mid value for the layer.

[[Anchor(Get2DMRILayerHeatScaleMin)]]
''Get``2DMRI``Layer``Heat``Scale``Min'' '''''layerID'''''

 Returns the heat scale min value for the layer.

[[Anchor(Get2DMRILayerLevel)]]
''Get``2DMRI``Layer``Level'' '''''layerID'''''

 Returns the grayscale color level of the volume.

[[Anchor(Get2DMRILayerMaxValue)]]
''Get``2DMRI``Layer``Max``Value'' '''''layerID'''''

 Returns the maximum value of the volume.

[[Anchor(Get2DMRILayerMaxVisibleValue)]]
''Get``2DMRI``Layer``Max``Visible``Value'' '''''layerID'''''

 Returns the maximum value to be drawn.

[[Anchor(Get2DMRILayerMinValue)]]
''Get``2DMRI``Layer``Min``Value'' '''''layerID'''''

 Returns the minimum value of the volume.

[[Anchor(Get2DMRILayerMinVisibleValue)]]
''Get``2DMRI``Layer``Min``Visible``Value'' '''''layerID'''''

 Returns the minimum value to be drawn.

[[Anchor(Get2DMRILayerROIOpacity)]]
''Get``2DMRI``Layer``ROI``Opacity'' '''''layerID'''''

 Returns the opacity of the ROI for a layer.

[[Anchor(Get2DMRILayerSampleMethod)]]
''Get``2DMRI``Layer``Sample``Method'' '''''layerID'''''

 Returns the sample method for this layer.

[[Anchor(Get2DMRILayerVolumeCollection)]]
''Get``2DMRI``Layer``Volume``Collection'' '''''layerID'''''

 Returns the volume collection for this layer.

[[Anchor(Get2DMRILayerWindow)]]
''Get``2DMRI``Layer``Window'' '''''layerID'''''

 Returns the grayscale window for this layer.

[[Anchor(Get2DMRIRASCoordsFromIndex)]]
''Get``2DMRI``RAS``Coords``From``Index'' '''''layerID x y z'''''

 Returns a list of RAS coords converted from the input index coords. '''x''', '''y''', or '''z''' should be integer coordinates.

[[Anchor(Get2DMRISLayerLineColor)]]
''Get``2DMRIS``Layer``Line``Color'' '''''layerID'''''

 Returns the line color for this layer as a list of red, green, and blue integers from 0-255.

[[Anchor(Get2DMRISLayerLineWidth)]]
''Get``2DMRIS``Layer``Line``Width'' '''''layerID'''''

 Returns the line width for this layer as an integer.

[[Anchor(Get2DMRISLayerSurfaceCollection)]]
''Get``2DMRIS``Layer``Surface``Collection'' '''''layerID'''''

 Returns the surface collection for this layer.

[[Anchor(Get2DMRISLayerVertexColor)]]
''Get``2DMRIS``Layer``Vertex``Color'' '''''layerID'''''

 Returns the vertex color for this layer as a list of red, green, and blue integers from 0-255.

[[Anchor(Get2DMRISNearestVertexIndex)]]
''Get``2DMRIS``Nearest``Vertex``Index'' '''''layerID x y z'''''

 Returns the index of the vertex closest to the input RAS coords and the distance to that vertex. '''x''', '''y''', and '''z''' should be floating point numbers.

[[Anchor(Get2DMRISRASCoordsFromVertexIndex)]]
''Get``2DMRIS``RAS``Coords``From``Vertex``Index'' '''''layerID vertexIndex'''''

 Returns as a list of RAS coords the location of the vertex. '''vertexIndex''' should be an integer that's a valid index for the surface displayed by the layer.

[[Anchor(GetCollectionRASBounds)]]
''Get``Collection``RAS``Bounds'' '''''collectionID'''''

 Return the bounds for this collection in RAS space. They will be returned as a list with six floating numbers: xmin, xmax, ymin, ymax, zmin, zmax.

[[Anchor(GetCollectionLabel)]]
''Get``Collection``Label'' '''''collectionID'''''

 Return the label for this collection.

[[Anchor(GetCollectionType)]]
''Get``Collection``Type'' '''''collectionID'''''

 Return the type for this layer.

[[Anchor(GetColorLUTEntryLabel)]]
''Get``Color``LUT``Entry``Label'' '''''lutID entry'''''

 Returns the label for an entry in an LUT. '''entry''' should be an integer index into the LUT.

[[Anchor(GetColorLUTEntryRGB)]]
''Get``Color``LUT``Entry``RGB'' '''''lutID entry'''''

 Returns the rgb values (0-255) for an entry in an LUT. '''entry''' should be an integer index into the LUT.

[[Anchor(GetColorLUTFileName)]]
''Get``Color``LUT``File``Name'' '''''lutID'''''

 Returns the LUT file name for a transform.

[[Anchor(GetColorLUTIDList)]]
''Get``Color``LUT``ID``List''

 Return a list of all colorLUTIDs.

[[Anchor(GetColorLUTLabel)]]
''Get``Color``LUT``Label'' '''''lutID'''''

 Returns the label for a color LUT.

[[Anchor(GetColorLUTNumberOfEntries)]]
''Get``Color``LUT``Number``Of``Entries'' '''''lutID'''''

 Returns the number of entries in an LUT.

[[Anchor(GetColumnOfViewInFrame)]]
''Get``Column``Of``View``In``Frame'' '''''frameID viewID'''''

 Return the column of the view ID in a frame.

[[Anchor(CycleCurrentViewInFrame)]]
''Cycle``Current``View``In``Frame'' '''''frameID'''''

 Selects the next view in a frame.

[[Anchor(GetDataCollectionIDList)]]
''Get``Data``Collection``ID``List''

 Return a list of all collectionIDs.

[[Anchor(GetFirstUnusedDrawLevelInView)]]
''Get``First``Unused``Draw``Level``In``View'' '''''viewID'''''

 Returns the first unused draw level.

[[Anchor(GetLayerIDList)]]
''Get``Layer``ID``List''

 Returns a list of all layerIDs.

[[Anchor(GetLayerInViewAtLevel)]]
''Get``Layer``In``View``At``Level'' '''''viewID level'''''

 Returns the layer in a view at a given draw level. '''level''' should be an integer from 0 - 9.

[[Anchor(GetLayerLabel)]]
''Get``Layer``Label'' '''''layerID'''''

 Return the label for this layer.

[[Anchor(GetLayerMainDataCollection)]]
''Get``Layer``Main``Data``Collection'' '''''layerID'''''

 Returns the collection ID of the main collection for this layer.

[[Anchor(GetLayerOpacity)]]
''Get``Layer``Opacity'' '''''layerID'''''

 Return the opacity for this layer.

[[Anchor(GetLayerReportInfo)]]
''Get``Layer``Report``Info'' '''''layerID'''''

 Return whether or not a layer is reporting info.

[[Anchor(GetLayerType)]]
''Get``Layer``Type'' '''''layerID'''''

 Return the type for this layer.

[[Anchor(GetLevelReportInfoInView)]]
''Get``Level``Report``Info``In``View'' '''''viewID level'''''

 Returns whether a level in a view is reporting info. '''level''' should be an integer from 0 - 9.

[[Anchor(GetLevelVisibilityInView)]]
''Get``Level``Visibility``In``View'' '''''viewID level'''''

 Returns the visibility for a level in a view. '''level''' should be an integer from 0 - 9.

[[Anchor(GetMainFrameID)]]
''Get``Main``Frame``ID''

 Returns the ID number of the main frame. This should be used whenever a frame ID is required.

[[Anchor(GetNumberOfColsAtRowInFrame)]]
''Get``Number``Of``Cols``At``Row``In``Frame'' '''''frameID row'''''

 Return the number of columns in arow. '''row''' is an integer.

[[Anchor(GetNumberOfRowsInFrame)]]
''Get``Number``Of``Rows``In``Frame'' '''''frameID'''''

 Return the number of rows in a frame.

[[Anchor(GetNumberOfViewMarkers)]]
''Get``Number``Of``View``Markers''

 Returns the number of view markers.

[[Anchor(GetRASCoordsFromVolumeSurfaceRAS)]]
''Get``RAS``Coords``From``Volume``Surface``RAS'' '''''collectionID x y z'''''

 Returns a list of RAS coords converted from the input surface RAS coords. This is for converting RAS points acquired from a surface that is associated with a volume and didn't generate coordinates with CRAS info. '''x''', '''y''', and '''z''' should be floating point numbers.

[[Anchor(GetROIIDList)]]
''Get``ROI``ID``List''

 Return a list of all ROIs.

[[Anchor(GetROIIDListForCollection)]]
''Get``ROI``ID``List``For``Collection'' '''''collectionID'''''

 Returns a lit of roiIDs belonging to this collection.

[[Anchor(GetRowOfViewInFrame)]]
''Get``Row``Of``View``In``Frame'' '''''frameID viewID'''''

 Return the row of the view ID in a frame.

[[Anchor(GetSelectedViewID)]]
''Get``Selected``View``ID'' '''''frameID'''''

 Return the viewID of the selected view.

[[Anchor(GetSubjectDir)]]
''Get``Subject``Dir''

 Returns the path to the subject's data if the subject name was set.

[[Anchor(GetSubjectName)]]
''Get``Subject``Name''

 Returns the subject name if one was set.

[[Anchor(GetSurfaceCollectionFileName)]]
''Get``Surface``Collection``File``Name'' '''''collectionID'''''

 Gets the file name for a given surface collection.

[[Anchor(GetSurfaceDataToSurfaceTransformVolume)]]
''Get``Surface``Data``To``Surface``Transform``Volume'' '''''collectionID'''''

 If a surface collection is using a volume to get its data to surface transform, returns the volume's collection ID.

[[Anchor(GetSurfaceUseRealRAS)]]
''Get``Surface``Use``Real``RAS'' '''''collectionID'''''

 Returns whether or not a surface has its useRealRAS flag on.

[[Anchor(GetToolBrush3D)]]
''Get``Tool``Brush``3D'' '''''toolID'''''

 Returns the current brush 3D of a tool.

[[Anchor(GetToolBrushRadius)]]
''Get``Tool``Brush``Radius'' '''''toolID'''''

 Gets the current brush radius of a tool.

[[Anchor(GetToolBrushShape)]]
''Get``Tool``Brush``Shape'' '''''toolID'''''

 Returns the current brush shape of a tool as a string: {{{voxel}}}, {{{square}}} or {{{circle}}}.

[[Anchor(GetToolEdgePathEdgeBias)]]
''Get``Tool``Edge``Path``Edge``Bias'' '''''toolID'''''

 Returns the bias for edges for the edge path tool.

[[Anchor(GetToolEdgePathStraightBias)]]
''Get``Tool``Edge``Path``Straight``Bias'' '''''toolID'''''

 Returns the bias for straight paths for the edge path tool.

[[Anchor(GetToolEraseVoxelValue)]]
''Get``Tool``Erase``Voxel``Value'' '''''toolID'''''

 Gets the erase voxel value of a tool.

[[Anchor(GetToolFlood3D)]]
''Get``Tool``Flood``3D'' '''''toolID'''''

 Gets the current flood 3D of a tool.

[[Anchor(GetToolFloodFuzziness)]]
''Get``Tool``Flood``Fuzziness'' '''''toolID'''''

 Returns a tool flood's fuzziness.

[[Anchor(GetToolFloodFuzzinessType)]]
''Get``Tool``Flood``Fuzziness``Type'' '''''toolID'''''

 Returns the tool's fuzziness type: {{{seed}}} or {{{gradient}}}.

[[Anchor(GetToolFloodMaxDistance)]]
''Get``Tool``Flood``Max``Distance'' '''''toolID'''''

 Returns a tool flood's max distance.

[[Anchor(GetToolFloodSourceCollection)]]
''Get``Tool``Flood``Source``Collection'' '''''toolID'''''

 Gets the current flood source collection of a tool.

[[Anchor(GetToolFloodStopAtPaths)]]
''Get``Tool``Flood``Stop``At``Paths'' '''''toolID'''''

 Returns whether or not a tool flood will stop at paths.

[[Anchor(GetToolFloodStopAtROIs)]]
''Get``Tool``Flood``Stop``At``ROIs'' '''''toolID'''''

 Returns whether or not a tool flood will stop at ROIs.

[[Anchor(GetToolIDForFrame)]]
''Get``Tool``ID``For``Frame'' '''''frameID'''''

 Returns the ID of the tool for this frame.

[[Anchor(GetToolMode)]]
''Get``Tool``Mode'' '''''toolID'''''

 Gets the current mode of a tool. The returned string will be one of the tool modes supplied to '''SetToolMode'''.

[[Anchor(GetToolNewVoxelValue)]]
''Get``Tool``New``Voxel``Value'' '''''toolID'''''

 Gets the new voxel value of a tool.

[[Anchor(GetToolOnlyBrushZero)]]
''Get``Tool``Only``Brush``Zero'' '''''toolID'''''

 Returns whether or not a brush is only affecting zero values.

[[Anchor(GetToolOnlyFloodZero)]]
''Get``Tool``Only``Flood``Zero'' '''''toolID'''''

 Returns whether or not a flood is only affecting zero values.

[[Anchor(GetToolTargetLayer)]]
''Get``Tool``Target``Layer'' '''''toolID'''''

 Gets the target layer of a tool. Returns a layerID.

[[Anchor(GetTransformIDList)]]
''Get``Transform``ID``List''

 Return a list of all transformIDs.

[[Anchor(GetTransformLabel)]]
''Get``Transform``Label'' '''''transformID'''''

 Returns the label for a transform.

[[Anchor(GetTransformRegistrationDest)]]
''Get``Transform``Registration``Dest'' '''''transformID'''''

 Returns the id of the dest volume if the transform is being treated as a registration.

[[Anchor(GetTransformRegistrationSource)]]
''Get``Transform``Registration``Source'' '''''transformID'''''

 Returns the id of the source volume if the transform is being treated as a registration.

[[Anchor(GetTransformValues)]]
''Get``Transform``Values'' '''''transformID'''''

 Returns a list of transform values in column order.

[[Anchor(GetUseVolumeDataToIndexTransform)]]
''Get``Use``Volume``Data``To``Index``Transform'' '''''collectionID'''''

 Returns whether or not a volume is using its Data to Index transform (usually RAS transform) in displaying data.

[[Anchor(GetViewFlipLeftRightYZ)]]
''Get``View``Flip``Left``Righ``tYZ'' '''''viewID'''''

 Returns the left-right flip flag for a view.

[[Anchor(GetViewIDAtFrameLocation)]]
''Get``View``ID``At``Frame``Location'' '''''frameID windowX windowY'''''

 Return the view ID at a window location. '''windowX''' and '''windowY''' should be integers.

[[Anchor(GetViewIDFromFrameColRow)]]
''Get``View``ID``From``Frame``Col``Row'' '''''frameID col row'''''

 Return the viewID from a view at a certain location. '''col''' and '''row''' must be valid integers for the current view configuration.

[[Anchor(GetViewInPlane)]]
''Get``View``In``Plane'' '''''viewID'''''

 Returns the in plane in a view.

[[Anchor(GetViewLockOnCursor)]]
''Get``View``Lock``On``Cursor'' '''''viewID'''''

 Returns whether or not a view is locked on the cursor.

[[Anchor(GetViewLinkedStatus)]]
''Get``View``Linked``Status'' '''''viewID'''''

 Returns the linked status for a view.

[[Anchor(GetViewRASCenter)]]
''Get``View``RAS``Center'' '''''viewID'''''

 Returns the view center as a list of x, y, and z RAS coordinates.

[[Anchor(GetViewRASCursor)]]
''Get``View``RAS``Cursor''

 Returns the cursor in RAS coords in a list of x y z coords.

[[Anchor(GetViewThroughPlaneIncrement)]]
''Get``View``Through``Plane``Increment'' '''''viewID throughPlane'''''

 Returns the through plane movement increment for throughPlane. '''throughPlane''' should be {{{x}}}, {{{y}}}, or {{{z}}}.

[[Anchor(GetViewTransform)]]
''Get``View``Transform'' '''''viewID'''''

 Returns the transformID of a view's view to world transform.

[[Anchor(GetViewZoomLevel)]]
''Get``View``Zoom``Level'' '''''viewID'''''

 Returns the zoom level in a view.

[[Anchor(GetVolumeAutosaveOn)]]
''Get``Volume``Autosave``On'' '''''collectionID'''''

 Returns whether or not autosave is on for this volume.

[[Anchor(GetVolumeAverageValueInROI)]]
''Get``Volume``Average``Value``In``ROI'' '''''collectionID roiID'''''

 Returns the average value of the voxels in an ROI in a volume.

[[Anchor(GetVolumeCollectionFileName)]]
''Get``Volume``Collection``File``Name'' '''''collectionID'''''

 Returns the file name for a given volume collection.

[[Anchor(GetVolumeHistogramInView)]]
''Get``Volume``Histogram``In``View'' '''''viewID volID roiID numBins'''''

 Returns a histogram of the volume that's visible in a view. Returns the format: '''{minBinValue binIncrement {binCount0 binCount1 .. binCountN}}''' where '''binCountN''' is '''numBins-1'''. '''volID''' is a collectionID. '''numBins''' is an integer.

[[Anchor(GetVolumeStandardDeviationInROI)]]
''Get``Volume``Standard``Deviation``In``ROI'' '''''collectionID roiID'''''

 Returns the standard deviation of the voxels in an ROI in a volume.

[[Anchor(GetVolumeSurfaceRASCoordsFromRAS)]]
''Get``Volume``Surface``RAS``Coords``From``RAS'' '''''collectionID x y z'''''

 Returns a list of surface RAS coords converted from the input RAS coords. Thisis for converting RAS points acquired from a surface that is associated with a volume and didn't generate coordinates with CRAS info. '''x''', '''y''', and '''z''' should be floating point numbers.

[[Anchor(ImportMarkersFromControlPoints)]]
''Import``Markers``From``Control``Points'' '''''collectionID fileName'''''

 Imports markers from a control.dat file using a volume collection to transform them..

[[Anchor(InvertTransform)]]
''Invert``Transform'' '''''transformID'''''

 Inverts a transform.

[[Anchor(IsSurfaceUsingDataToSurfaceTransformFromVolume)]]
''Is``Surface``Using``Data``To``Surface``Transform``From``Volume'' '''''collectionID'''''

 Returns whether or not a surface collection is using a volume to get its data to surface transform.

[[Anchor(IsTransformRegistration)]]
''Is``Transform``Registration'' '''''transformID'''''

 Returns whether or not a transform is being treated as a registration.

[[Anchor(LoadVolume)]]
''Load``Volume'' '''''fileName createLayer frame``ID``To``Add'''''

 Loads a volume from '''fileName'''. '''createLayer''' should be 1 or 0 and specifies whether an appropriate layer will be created, and if so, '''frame``ID``To``Add''' should specify which frame to add the layer to in all views. '''createLayer''' should probably be 1 and '''frame``ID``To``Add''' should be a call to ''GetMainFrameID''.

[[Anchor(LoadVolumeFromFileName)]]
''Load``Volume``From``File``Name'' '''''collectionID'''''

 Loads the volume from the file name. The file name must have been set previously.

[[Anchor(LoadSurface)]]
''Load``Surface'' '''''fileName createLayer frame``ID``To``Add'''''

 Loads a surface from '''fileName'''. '''createLayer''' should be 1 or 0 and specifies whether an appropriate layer will be created, and if so, '''frame``ID``To``Add''' should specify which frame to add the layer to in all views. '''createLayer''' should probably be 1 and '''frame``ID``To``Add''' should be a call to ''GetMainFrameID''.

[[Anchor(LoadSurfaceFromFileName)]]
''Load``Surface``From``File``Name'' '''''collectionID'''''

 Loads the surface from the file name.

[[Anchor(LoadSurfacePatch)]]
''Load``Surface``Patch'' '''''collectionID fileName'''''

 Loads a patch into a surface.

[[Anchor(LoadTransform)]]
''Load``Transform'' '''''fileName'''''

 Loads a transform.

[[Anchor(LoadTransformFromLTAFile)]]
''Load``Transform``From``LTA``File'' '''''transformID LTAFileName'''''

 Loads an LTA from a file into an existing transform.

[[Anchor(MakeDataCollection)]]
''Make``Data``Collection'' '''''collectionType'''''

 Make a new data collection of the given type and return the collectionID. '''collectionID''' should be a recognized collection type such as:

||Volume||A 3D volume for display in a 2DMRI layer.||
||Surface||A 3D surface for display in a 2DMRIS layer.||

 Note that there are easier functions to use to load data, such as ''Load``Volume'' and ''Load``Surface''. This is a low level function that creates a data collection but does not load any actual data nor create a layer.

[[Anchor(MakeLayer)]]
''Make``Layer'' '''''layerType'''''

 Makes a new layer of the given type and returns the layerID. '''layerID''' should be a recognized layer type such as:

||2DMRI||A layer for drawing a volume||
||2DMRIS||A layer for showing a surface intersected on a plane||

 Note that there are easier functions to use to load data, such as ''Load``Volume'' and ''Load``Surface''. This is a low level function that creates a layer but does not associate any data with it nor add it to any views.

[[Anchor(MakeLayer)]]
''Make``Layer'' '''''layerType'''''

 Makes a new layer of the given type and returns the layerID. '''layerID''' should be a recognized layer type such as:

||2DMRI||A layer for drawing a volume||
||2DMRIS||A layer for showing a surface intersected on a plane||

 Note that there are easier functions to use to load data, such as ''Load``Volume'' and ''Load``Surface''. This is a low level function that creates a layer but does not associate any data with it nor add it to any views.

[[Anchor(MakeNewColorLUT)]]
''Make``New``Color``LUT''

 Creates a new color LUT and returns its ID.

[[Anchor(MakeNewTransform)]]
''Make``New``Transform''

 Creates a new transform and returns its ID.

[[Anchor(MakeSegVolIntensityReport)]]
''Make``Seg``Vol``Intensity``Report'' '''''fnReport'''''

 Make the intensity report from the segmentation volume report.

[[Anchor(MakeSegVolReport)]]
''Make``Seg``Vol``Report'' '''''fnReport'''''

 Make the segmentation volume report.

[[Anchor(MakeVolumeUsingTemplate)]]
''Make``Volume``Using``Template'' '''''collectionID templateCollectionID'''''

 Makes a volume using an existing volume as a template. Given an existing volume, this initializes internal settings according to an existing template.

[[Anchor(NewCollectionROI)]]
''New``Collection``ROI'' '''''collectionID'''''

 Makes a new ROI for this collection and returns the ID.

[[Anchor(NewVolume)]]
''New``Volume'' '''''templateID createLayer frame``ID``To``Add'''''

 Creates a new volume based on an existing one. '''templateID''' is a collectionID for the volume to use as a template. '''createLayer''' should be 1 or 0 and specifies whether an appropriate layer will be created, and if so, '''frame``ID``To``Add''' should specify which frame to add the layer to in all views. '''createLayer''' should probably be 1 and '''frame``ID``To``Add''' should be a call to ''GetMainFrameID''.

[[Anchor(NewVolumeROIFromLabel)]]
''New``Volume``ROI``From``Label'' '''''collectionID fileName'''''

 Creates an ROI from a label file and returns the ID of the new ROI.

[[Anchor(PrintAllCommands)]]
''Print``All``Commands''

 Print all registered commands.

[[Anchor(ReadPathFile)]]
''Read``Path``File'' '''''fileName'''''

 Read paths from a file.

[[Anchor(RedrawFrame)]]
''Redraw``Frame'' '''''frameID'''''

 Tells a frame to redraw without waiting for the next update event. Should be used in scripts to force a redraw before taking a screenshot.

[[Anchor(RemoveAllLayersFromView)]]
''Remove``All``Layers``From``View'' '''''viewID'''''

 Remove all layers from a view.

[[Anchor(RemoveLayerFromViewAtLevel)]]
''Remove``Layer``From``View``At``Level'' '''''viewID level'''''

 Remove a layer from a view. '''level''' should be an integer from 0 - 9.

[[Anchor(SaveSceneScript)]]
''Save``Scene``Script'' '''''fileName'''''

 Makes a script that can be used to reproduce the current view configuration.

[[Anchor(SaveVolume)]]
''Save``Volume'' '''''collectionID'''''

 Save volume with its file name.

[[Anchor(SaveVolumeWithFileName)]]
''Save``Volume``With``File``Name'' '''''collectionID fileName'''''

 Save volume with a given file name.

[[Anchor(SelectCollectionROI)]]
''Select``Collection``ROI'' '''''collectionID roiID'''''

 Selects an ROI for this collection.

[[Anchor(Set2DMRILayerBrightness)]]
''Set``2DMRI``Layer``Brightness'' '''''layerID brightness'''''

 Sets the brightness for this layer. '''brightness''' should be a floating point number from 0 to 1.

[[Anchor(Set2DMRILayerColorLUT)]]
''Set``2DMRI``Layer``Color``LUT'' '''''layerID lutID'''''

 Sets the LUT  for this layer.

[[Anchor(Set2DMRILayerColorMapMethod)]]
''Set``2DMRI``Layer``Color``Map``Method'' '''''layerID method'''''

 Sets the color map method for this layer. '''method''' should be {{{grayscale}}}, {{{heatScale}}}, or {{{lut}}}.

[[Anchor(Set2DMRILayerContrast)]]
''Set``2DMRI``Layer``Contrast'' '''''layerID contrast'''''

 Sets the contrast for this layer. '''contrast''' should be a floating point number from 0 to 30.

[[Anchor(Set2DMRILayerDrawMIP)]]
''Set``2DMRI``Layer``Draw``MIP'' '''''layerID drawMIP'''''

 Sets property for drawing the maximum intensity projection. '''drawMIP''' should be 1 or 0.

[[Anchor(Set2DMRILayerDrawZeroClear)]]
''Set``2DMRI``Layer``Draw``Zero``Clear'' '''''layerID drawClear'''''

 Sets property for drawingvalues of zero clear. '''drawClear''' should be 1 or 0.

[[Anchor(Set2DMRILayerEditableROI)]]
''Set``2DMRI``Layer``Editable``ROI'' '''''layerID editable'''''

 Specify whether or not this layer's ROI is editable. '''editable''' should be 1 or 0.

[[Anchor(Set2DMRILayerHeatScaleMax)]]
''Set``2DMRI``Layer``Heat``Scale``Max'' '''''layerID value'''''

 Sets the heat scale max value for the layer. '''value''' should be a value in the range of the volume belonging to the layer.

[[Anchor(Set2DMRILayerHeatScaleMid)]]
''Set``2DMRI``Layer``Heat``Scale``Mid'' '''''layerID value'''''

 Sets the heat scale mid value for the layer. '''value''' should be a value in the range of the volume belonging to the layer.

[[Anchor(Set2DMRILayerHeatScaleMin)]]
''Set``2DMRI``Layer``Heat``Scale``Min'' '''''layerID value'''''

 Sets the heat scale min value for the layer. '''value''' should be a value in the range of the volume belonging to the layer.

[[Anchor(Set2DMRILayerLevel)]]
''Set``2DMRI``Layer``Level'' '''''layerID level'''''

 Sets the grayscale color level for the layer. '''level''' should be a floating value from 0 to 1.

[[Anchor(Set2DMRILayerMaxVisibleValue)]]
''Set``2DMRI``Layer``Max``Visible``Value'' '''''layerID value'''''

 Sets the maximum value to be drawn.values of zero clear. '''value''' should be a value in the range of the volume belonging to the layer.

[[Anchor(Set2DMRILayerMinVisibleValue)]]
''Set``2DMRI``Layer``Min``Visible``Value'' '''''layerID value'''''

 Sets the minimum value to be drawn.values of zero clear. '''value''' should be a value in the range of the volume belonging to the layer.

[[Anchor(Set2DMRILayerROIOpacity)]]
''Set``2DMRI``Layer``ROI``Opacity'' '''''layerID opacity'''''

 Sets the opacity of the ROI for a layer. '''opacity''' should be from 0 to 1.

[[Anchor(Set2DMRILayerSampleMethod)]]
''Set``2DMRI``Layer``Sample``Method'' '''''layerID method'''''

 Sets the sample method for this layer. '''method''' should be {{{nearest}}}, {{{trilinear}}}, or {{{sinc}}}.

[[Anchor(Set2DMRILayerVolumeCollection)]]
''Set``2DMRI``Layer``Volume``Collection'' '''''layerID collectionID'''''

 Sets the volume collection for this layer.

[[Anchor(Set2DMRISLayerLineColor)]]
''Set``2DMRIS``Layer``Line``Color'' '''''layerID red green blue'''''

 Sets the line color for this layer. '''red''', '''green''', and '''blue''' should be 0-255 integers.

[[Anchor(Set2DMRISLayerLineWidth)]]
''Set``2DMRIS``Layer``Line``Width'' '''''layerID width'''''

 Sets the line width for this layer. '''width''' should be an integer.

[[Anchor(Set2DMRISLayerSurfaceCollection)]]
''Set``2DMRIS``Layer``Surface``Collection'' '''''layerID collectionID'''''

 Sets the surface collection for this layer.

[[Anchor(Set2DMRISLayerVertexColor)]]
''Set``2DMRIS``Layer``Vertex``Color'' '''''layerID red green blue'''''

 Sets the vertex color for this layer. '''red''', '''green''', and '''blue''' should be 0-255 integers.

[[Anchor(Set2DMRILayerWindow)]]
''Set``2DMRI``Layer``Window'' '''''layerID window'''''

 Sets the grayscale window for the layer. '''window''' should be a floating value from 0 to 1.

[[Anchor(SetCollectionLabel)]]
''Set``Collection``Label'' '''''collectionID label'''''

 Set the label for a collection.

[[Anchor(SetColorLUTFileName)]]
''Set``Color``LUT``File``Name'' '''''lutID fileName'''''

 Set the LUT file name for a colorLUT.

[[Anchor(SetColorLUTLabel)]]
''Set``Color``LUT``Label'' '''''lutID label'''''

 Set the label for a color LUT. '''labe''' should be a string.

[[Anchor(SetCursorFromEditDatFile)]]
''Set``Cursor``From``Edit``Dat``File''

 Reads a cursor from a subject's edit.dat file if it exists and the subject name has been set.

[[Anchor(SetCursorFromSurfaceVertexIndex)]]
''Set``Cursor``From``Surface``Vertex``Index'' '''''layerID vertexNumber'''''

 Sets the cursor to a vertex in a surface. The layer should be one displaying a surface, and '''vertexNumber''' should be a valid vertx index in the layer's surface.

[[Anchor(SetCursorFromVolumeIndexCoords)]]
''Set``Cursor``From``Volume``Index``Coords'' '''''collectionID x y z'''''

 Converts the given MRI index coordinate to RAS and sets the cursor from that, converting in the volume referenced by '''collectionID'''. '''x''', '''y''', and '''z''' should be integers.

[[Anchor(SetDataTransform)]]
''Set``Data``Transform'' '''''collectionID transformID'''''

 Set the data to world transform for a data collection.

[[Anchor(SetFrameViewConfiguration)]]
''Set``Frame``View``Configuration'' '''''frameID configuration'''''

 Sets a frame's view configuration. Supported '''configuration'''s, where each number is the number of columns in a row: {{{c1}}} {{{c22}}} {{{c44}}} {{{c13}}}.

[[Anchor(SetLayerInViewAtLevel)]]
''Set``Layer``In``View``At``Level'' '''''viewID layerID level'''''

 Sets the layer in a view at a given draw level. Higher draw levels will draw later. '''level''' should be an integer from 0 - 9.

[[Anchor(SetLayerLabel)]]
''Set``Layer``Label'' '''''layerID label'''''

 Set the label for a layer.

[[Anchor(SetLayerOpacity)]]
''Set``Layer``Opacity'' '''''layerID opacity'''''

 Set the opacity for this layer. '''opacity''' should be a float from 0 to 1.

[[Anchor(SetLayerReportInfo)]]
''Set``Layer``Report``Info'' '''''layerID report'''''

 Set whether or not a layer should report info. '''report''' should be 1 or 0.

[[Anchor(SetLevelReportInfoInView)]]
''Set``Level``Report``Info``In``View'' '''''viewID level reportInfo'''''

 Sets the flag for reporting info for a level in a view. '''level''' should be an integer from 0 - 9. '''reportInfo''' should be 1 or 0.

[[Anchor(SetLevelVisibilityInView)]]
''Set``Level``Visibility``In``View'' '''''viewID level visibility'''''

 Sets the visibility for a level in a view. '''level''' should be an integer from 0 - 9. '''visibility''' should be 1 or 0.

[[Anchor(SetNumberOfViewMarkers)]]
''Set``Number``Of``View``Markers'' '''''numMarkers'''''

 Sets the number of view markers.

[[Anchor(SetROIForSegVolReport)]]
''Set``ROI``For``Seg``Vol``Report'' '''''volID roiID'''''

 Set the volume and ROI to use in the segmentation volume report.

[[Anchor(SetSegVolReportLUT)]]
''Set``Seg``Vol``Report``LUT'' '''''lutID'''''

 Set the LUT in the segmentation volume report.

[[Anchor(SetSegVolReportSegmentation)]]
''Set``Seg``Vol``Report``Segmentation'' '''''segID'''''

 Set the segmentation volume in the segmentation volume report.

[[Anchor(SetSelectedViewID)]]
''Set``Selected``View``ID'' '''''frameID viewID'''''

 Sets the select view in a frame.

[[Anchor(SetSurfaceCollectionFileName)]]
''Set``Surface``Collection``File``Name'' '''''collectionID fileName'''''

 Sets the file name for a given surface collection.

[[Anchor(SetSurfaceDataToSurfaceTransformFromVolume)]]
''Set``Surface``Data``To``Surface``Transform``From``Volume'' '''''collectionID volumeID'''''

 Gets the data to surface transform from a volume.

[[Anchor(SetSurfaceDataToSurfaceTransformToDefault)]]
''Set``Surface``Data``To``Surface``Transform``To``Default'' '''''collectionID'''''

 Sets the data to surface transform for a surface to the default, which will be ../mri/orig or identity.

[[Anchor(SetToolBrush3D)]]
''Set``Tool``Brush``3D'' '''''toolID 3D'''''

 Sets the current brush 3D of a tool. '''3D''' is either 1 or 0.

[[Anchor(SetToolBrushRadius)]]
''Set``Tool``Brush``Radius'' '''''toolID radius'''''

 Sets the current brush radius of a tool. '''radius''' should be a floating point number.

[[Anchor(SetToolBrushShape)]]
''Set``Tool``Brush``Shape'' '''''toolID shape'''''

 Sets the current brush shape of a tool. '''shape''' should be {{{voxel}}}, {{{square}}} or {{{circle}}}.

[[Anchor(SetToolEdgePathEdgeBias)]]
''Set``Tool``Edge``Path``Edge``Bias'' '''''toolID bias'''''

 Sets the bias for edges for the edge path tool. '''bias''' is a floating point number from 0 to 1.

[[Anchor(SetToolEdgePathStraightBias)]]
''Set``Tool``Edge``Path``Straight``Bias'' '''''toolID bias'''''

 Sets the bias for straight paths for the edge path tool. '''bias''' is a floating point number from 0 to 1.

[[Anchor(SetToolEraseVoxelValue)]]
''Set``Tool``Erase``Voxel``Value'' '''''toolID value'''''

 Sets the erase voxel value of a tool.

[[Anchor(SetToolFlood3D)]]
''Set``Tool``Flood``3D'' '''''toolID 3D'''''

 Sets the current flood 3D of a tool. '''3D''' is either 1 or 0.

[[Anchor(SetToolFloodFuzziness)]]
''Set``Tool``Flood``Fuzziness'' '''''toolID fuzziness'''''

 Specify a tool flood's fuzziness. '''fuzziness''' is a floating point number.

[[Anchor(SetToolFloodFuzzinessType)]]
''Set``Tool``Flood``Fuzziness``Type'' '''''toolID type'''''

 Sets the tool's fuzziness type. '''type''' should be {{{seed}}} or {{{gradient}}}.

[[Anchor(SetToolFloodMaxDistance)]]
''Set``Tool``Flood``Max``Distance'' '''''toolID distance'''''

 Specify a tool flood's max distance. '''distance''' is a floating point number.

[[Anchor(SetToolFloodSourceCollection)]]
''Set``Tool``Flood``Source``Collection'' '''''toolID collectionID'''''

 Sets the current flood source collection of a tool.

[[Anchor(SetToolFloodStopAtPaths)]]
''Set``Tool``Flood``Stop``At``Paths'' '''''toolID stop'''''

 Specify whether a tool flood should stop at paths. '''stop''' is either 1 or 0.

[[Anchor(SetToolFloodStopAtROIs)]]
''Set``Tool``Flood``Stop``At``ROIs'' '''''toolID stop'''''

 Specify whether a tool flood should stop at ROIs. '''stop''' is either 1 or 0.

[[Anchor(SetToolMode)]]
''Set``Tool``Mode'' '''''toolID mode'''''

 Sets the current mode of a tool. '''mode''' should be one of the following:

||navigation||The navigation tool||
||plane||The plane tool||
||marker||The marker tool||
||voxelEditing||The voxel editing tool||
||voxelFilling||The voxel filling tool||
||roiEditing||The ROI editing tool||
||roiFilling||The ROI filling tool||
||straightPath||The straight path tool||
||edgePath||The edge path tool||

[[Anchor(SetToolNewVoxelValue)]]
''Set``Tool``New``Voxel``Value'' '''''toolID value'''''

 Sets the new voxel value of a tool. '''value''' is a float.

[[Anchor(SetToolOnlyBrushZero)]]
''Set``Tool``Only``Brush``Zero'' '''''toolID onlyZero'''''

 Specify whether the brush should only affect zero values..

[[Anchor(SetToolOnlyFloodZero)]]
''Set``Tool``Only``Flood``Zero'' '''''toolID onlyZero'''''

 Specify whether the flood should only affect zero values. '''onlyZero''' is 1 or 0.

[[Anchor(SetToolTargetLayer)]]
''Set``Tool``Target``Layer'' '''''toolID layerID'''''

 Sets the target layer of a tool.

[[Anchor(SetTransformLabel)]]
''Set``Transform``Label'' '''''transformID label'''''

 Set the label for a transform. '''label''' should be a string.

[[Anchor(SetTransformValues)]]
''Set``Transform``Values'' '''''transformID listOfValues'''''

 Sets the values of a transform. '''listOfValues''' should be a list of 16 values in column order.

[[Anchor(SetUseVolumeDataToIndexTransform)]]
''Set``Use``Volume``Data``To``Index``Transform'' '''''collectionID use'''''

 Use or don't use the volume's Data to Index transform (usually RAS transform) in displaying data. '''use''' should be 1 or 0.

[[Anchor(SetViewFlipLeftRightYZ)]]
''Set``View``Flip``Left``Right``YZ'' '''''viewID flip'''''

 Set the left-right flip flag for a view. '''flip''' should be 1 or 0.

[[Anchor(SetViewInPlane)]]
''Set``View``In``Plane'' '''''viewID inPlane'''''

 Sets the in plane in a view. '''inPlane''' should be one of the following: {{{x}}} {{{y}}} {{{z}}}

[[Anchor(SetViewLinkedStatus)]]
''Set``View``Linked``Status'' '''''viewID linked'''''

 Set the linked status for a view.

[[Anchor(SetViewLockOnCursor)]]
''Set``View``Lock``On``Cursor'' '''''viewID lock'''''

 Set a view to keep its view locked on the cursor. '''lock''' should be 1 or 0.

[[Anchor(SetViewRASCenter)]]
''Set``View``RAS``Center'' '''''viewID x y z'''''

 Sets the view center. '''x''', '''y''', and '''z''' should be floating point numbers in world RAS coordinates.

[[Anchor(SetViewRASCursor)]]
''Set``View``RAS``Cursor'' '''''x y z'''''

 Sets the cursor in RAS coords. '''x''', '''y''', and '''z''' are floating point numbers.

[[Anchor(SetViewStateToLayerBounds)]]
''Set``View``State``To``Layer``Bounds'' '''''viewID layerID'''''

 Sets the view so that the layer's data completely fills the view.

[[Anchor(SetViewThroughPlaneIncrement)]]
''Set``View``Through``Plane``Increment'' '''''viewID throughPlane increment'''''

 Set the amount that using the through plane movement keys will increment or decrement the through plane RAS value. '''throughPlane''' should be {{{x}}}, {{{y}}}, or {{{z}}}. '''increments''' should be a floating point number.

[[Anchor(SetViewTransform)]]
''Set``View``Transform'' '''''viewID transformID'''''

 Set the view to world transform for a view.

[[Anchor(SetViewZoomLevel)]]
''Set``View``Zoom``Level'' '''''viewID zoomLevel'''''

 Sets the zoom level in a view. '''zoomLevel''' should be a floating point number. 1 is normal zoom, 0-1 is zoomed out, and 1+ is zoomed in.

[[Anchor(SetVolumeAutosaveOn)]]
''Set``Volume``Autosave``On'' '''''collectionID on'''''

 Set whether or not autosave is on for this volume. '''on''' should be 1 or 0.

[[Anchor(SetVolumeCollectionFileName)]]
''Set``Volume``Collection``File``Name'' '''''collectionID fileName'''''

 Sets the file name for a given volume collection. This does not actually load the volume.

[[Anchor(TreatTransformAsNative)]]
''Treat``Transform``As``Native'' '''''transformID'''''

 If a transform was set to be treated as a registration, this restores it to normal.

[[Anchor(TreatTransformAsRegistration)]]
''Treat``Transform``As``Registration'' '''''transformID sourceVolumeID destVolumeID'''''

 Treats a transform as a tkregistration between two volumes, getting the necessary geometry information from them to register them.. '''sourceVolumeID''' and '''destVolumeID''' are collectionIDs.

[[Anchor(UpdateFrame)]]
''Update``Frame'' '''''frameID'''''

 Forces a redraw of the given frame.

[[Anchor(WriteCursorToEditDatFile)]]
''Write``Cursor``To``Edit``Dat``File''

 Writes the cursor location to a subject's edit.dat file if it exists and the subject name has been set.

[[Anchor(WritePathFile)]]
''Write``Path``File'' '''''fileName'''''

 Write paths to a file.

[[Anchor(WriteVolumeROIsToSegmentation)]]
''Write``Volume``ROIs``To``Segmentation'' '''''collectionID fileName'''''

 Writes a series of structure ROIs to a segmentation volume. This will write all of the ROIs in the collection that are marked as structure ROIs to a new segmentation volume.

[[Anchor(WriteVolumeROIToLabel)]]
''Write``Volume``ROI``To``Label'' '''''collectionID roiID fileName'''''

 Writes an ROI to a label file. Must provide the collectionID that the ROI is associated with; if the ROI doesn't match the collection, you'll receive an error.


== Index ==

=== Loading Data ===

[#NewVolume NewVolume]
[#LoadVolume LoadVolume]
[#LoadSurface LoadSurface]
[#LoadTransform LoadTransform]

=== Frames ===

[#GetMainFrameID GetMainFrameID]
[#UpdateFrame UpdateFrame]
[#RedrawFrame RedrawFrame]
[#SetFrameViewConfiguration SetFrameViewConfiguration]
[#GetViewIDFromFrameColRow GetViewIDFromFrameColRow]
[#GetSelectedViewID GetSelectedViewID]
[#SetSelectedViewID SetSelectedViewID]
[#GetNumberOfRowsInFrame GetNumberOfRowsInFrame]
[#GetNumberOfColsAtRowInFrame GetNumberOfColsAtRowInFrame]
[#GetViewIDAtFrameLocation GetViewIDAtFrameLocation]
[#GetColumnOfViewInFrame GetColumnOfViewInFrame]
[#GetRowOfViewInFrame GetRowOfViewInFrame]
[#CopyViewLayersToAllViewsInFrame CopyViewLayersToAllViewsInFrame]
[#GetToolIDForFrame GetToolIDForFrame]
[#CycleCurrentViewInFrame CycleCurrentViewInFrame]
[#CaptureFrameToFile CaptureFrameToFile]

=== Views ===

[#SaveSceneScript SaveSceneScript]
[#ConvertWindowToViewRAS ConvertWindowToViewRAS]

==== View State ====

[#SetViewInPlane SetViewInPlane]
[#GetViewInPlane GetViewInPlane]
[#SetViewZoomLevel SetViewZoomLevel]
[#GetViewZoomLevel GetViewZoomLevel]
[#SetViewRASCenter SetViewRASCenter]
[#GetViewRASCenter GetViewRASCenter]
[#SetViewStateToLayerBounds SetViewStateToLayerBounds]
[#SetViewLinkedStatus SetViewLinkedStatus]
[#GetViewLinkedStatus GetViewLinkedStatus]
[#SetViewLockOnCursor SetViewLockOnCursor]
[#GetViewLockOnCursor GetViewLockOnCursor]
[#SetViewTransform SetViewTransform]
[#GetViewTransform GetViewTransform]
[#SetViewFlipLeftRightYZ SetViewFlipLeftRightYZ]
[#GetViewFlipLeftRightYZ GetViewFlipLeftRightYZ]
[#SetViewThroughPlaneIncrement SetViewThroughPlaneIncrement]
[#GetViewThroughPlaneIncrement GetViewThroughPlaneIncrement]

==== Draw Levels ====

[#SetLayerInViewAtLevel SetLayerInViewAtLevel]
[#GetLayerInViewAtLevel GetLayerInViewAtLevel]
[#RemoveAllLayersFromView RemoveAllLayersFromView]
[#RemoveLayerFromViewAtLevel RemoveLayerFromViewAtLevel]
[#SetLevelVisibilityInView SetLevelVisibilityInView]
[#GetLevelVisibilityInView GetLevelVisibilityInView]
[#SetLevelReportInfoInView SetLevelReportInfoInView]
[#GetLevelReportInfoInView GetLevelReportInfoInView]
[#GetFirstUnusedDrawLevelInView GetFirstUnusedDrawLevelInView]

==== Cursor ====

[#SetViewRASCursor SetViewRASCursor]
[#GetViewRASCursor GetViewRASCursor]
[#SetCursorFromSurfaceVertexIndex SetCursorFromSurfaceVertexIndex]
[#SetCursorFromVolumeIndexCoords SetCursorFromVolumeIndexCoords]
[#SetCursorFromEditDatFile SetCursorFromEditDatFile]
[#WriteCursorToEditDatFile WriteCursorToEditDatFile]

==== Markers ====

[#SetNumberOfViewMarkers SetNumberOfViewMarkers]
[#GetNumberOfViewMarkers GetNumberOfViewMarkers]
[#ExportMarkersToControlPoints ExportMarkersToControlPoints]
[#ImportMarkersFromControlPoints ImportMarkersFromControlPoints]

==== Paths ====

[#WritePathFile WritePathFile]
[#ReadPathFile ReadPathFile]

=== Layers ===

[#GetLayerIDList GetLayerIDList]
[#MakeLayer MakeLayer]
[#DeleteLayer DeleteLayer]
[#SetLayerLabel SetLayerLabel]
[#GetLayerLabel GetLayerLabel]
[#GetLayerType GetLayerType]
[#GetLayerOpacity GetLayerOpacity]
[#SetLayerOpacity SetLayerOpacity]
[#GetLayerReportInfo GetLayerReportInfo]
[#SetLayerReportInfo SetLayerReportInfo]
[#GetLayerMainDataCollection GetLayerMainDataCollection]

==== 2DMRI Layer ====

[#Set2DMRILayerVolumeCollection Set2DMRILayerVolumeCollection]
[#Get2DMRILayerVolumeCollection Get2DMRILayerVolumeCollection]
[#Set2DMRILayerColorMapMethod Set2DMRILayerColorMapMethod]
[#Get2DMRILayerColorMapMethod Get2DMRILayerColorMapMethod]
[#Set2DMRILayerSampleMethod Set2DMRILayerSampleMethod]
[#Get2DMRILayerSampleMethod Get2DMRILayerSampleMethod]
[#Set2DMRILayerBrightness Set2DMRILayerBrightness]
[#Get2DMRILayerBrightness Get2DMRILayerBrightness]
[#Set2DMRILayerContrast Set2DMRILayerContrast]
[#Get2DMRILayerContrast Get2DMRILayerContrast]
[#Set2DMRILayerLevel Set2DMRILayerMinLevel]
[#Get2DMRILayerLevel Get2DMRILayerMinLevel]
[#Set2DMRILayerWindow Set2DMRILayerMinWindow]
[#Get2DMRILayerWindow Get2DMRILayerMinWindow]
[#Set2DMRILayerColorLUT Set2DMRILayerColorLUT]
[#Get2DMRILayerColorLUT Get2DMRILayerColorLUT]
[#Set2DMRILayerDrawZeroClear Set2DMRILayerDrawZeroClear]
[#Get2DMRILayerDrawZeroClear Get2DMRILayerDrawZeroClear]
[#Set2DMRILayerDrawMIP Set2DMRILayerDrawMIP]
[#Get2DMRILayerDrawMIP Get2DMRILayerDrawMIP]
[#Set2DMRILayerMinVisibleValue Set2DMRILayerMinVisibleValue]
[#Get2DMRILayerMinVisibleValue Get2DMRILayerMinVisibleValue]
[#Set2DMRILayerMaxVisibleValue Set2DMRILayerMaxVisibleValue]
[#Get2DMRILayerMaxVisibleValue Get2DMRILayerMaxVisibleValue]
[#Get2DMRILayerMinValue Get2DMRILayerMinValue]
[#Get2DMRILayerMaxValue Get2DMRILayerMaxValue]
[#Get2DMRILayerHeatScaleMin Get2DMRILayerHeatScaleMin]
[#Set2DMRILayerHeatScaleMin Set2DMRILayerHeatScaleMin]
[#Get2DMRILayerHeatScaleMid Get2DMRILayerHeatScaleMid]
[#Set2DMRILayerHeatScaleMid Set2DMRILayerHeatScaleMid]
[#Get2DMRILayerHeatScaleMax Get2DMRILayerHeatScaleMax]
[#Set2DMRILayerHeatScaleMax Set2DMRILayerHeatScaleMax]
[#Set2DMRILayerROIOpacity Set2DMRILayerROIOpacity]
[#Get2DMRILayerROIOpacity Get2DMRILayerROIOpacity]
[#Set2DMRILayerEditableROI Set2DMRILayerEditableROI]
[#Get2DMRILayerEditableROI Get2DMRILayerEditableROI]
[#Get2DMRIRASCoordsFromIndex Get2DMRIRASCoordsFromIndex]
[#Flood2DMRIVolume Flood2DMRIVolume]

==== 2DMRIS Layer ====

[#Set2DMRISLayerSurfaceCollection Set2DMRISLayerSurfaceCollection]
[#Get2DMRISLayerSurfaceCollection Get2DMRISLayerSurfaceCollection]
[#Set2DMRISLayerLineColor Set2DMRISLayerLineColor]
[#Get2DMRISLayerLineColor Get2DMRISLayerLineColor]
[#Set2DMRISLayerVertexColor Set2DMRISLayerVertexColor]
[#Get2DMRISLayerVertexColor Get2DMRISLayerVertexColor]
[#Set2DMRISLayerLineWidth Set2DMRISLayerLineWidth]
[#Get2DMRISLayerLineWidth Get2DMRISLayerLineWidth]
[#Get2DMRISRASCoordsFromVertexIndex Get2DMRISRASCoordsFromVertexIndex]
[#Get2DMRISNearestVertexIndex Get2DMRISNearestVertexIndex]

=== ROIs ===

[#GetROIIDList GetROIIDList]
[#GetROIIDListForCollection GetROIIDListForCollection]
[#NewVolumeROIFromLabel NewVolumeROIFromLabel]
[#DeleteCollectionROI DeleteCollectionROI]
[#NewCollectionROI NewCollectionROI]
[#SelectCollectionROI SelectCollectionROI]
[#WriteVolumeROIsToSegmentation WriteVolumeROIsToSegmentation]
[#WriteVolumeROIToLabel WriteVolumeROIToLabel]
[#GetVolumeAverageValueInROI GetVolumeAverageValueInROI]
[#GetVolumeStandardDeviationInROI GetVolumeStandardDeviationInROI]

=== Color LUTs ===

[#GetColorLUTIDList GetColorLUTIDList]
[#MakeNewColorLUT MakeNewColorLUT]
[#SetColorLUTLabel SetColorLUTLabel]
[#GetColorLUTLabel GetColorLUTLabel]
[#SetColorLUTFileName SetColorLUTFileName]
[#GetColorLUTFileName GetColorLUTFileName]
[#GetColorLUTNumberOfEntries GetColorLUTNumberOfEntries]
[#GetColorLUTEntryLabel GetColorLUTEntryLabel]
[#GetColorLUTEntryRGB GetColorLUTEntryRGB]
[#IsColorLUTEntryValid IsColorLUTEntryValid]

=== Transforms ===

[#GetTransformIDList GetTransformIDList]
[#MakeNewTransform MakeNewTransform]
[#SetTransformLabel SetTransformLabel]
[#GetTransformLabel GetTransformLabel]
[#SetTransformValues SetTransformValues]
[#GetTransformValues GetTransformValues]
[#LoadTransformFromLTAFile LoadTransformFromLTAFile]
[#InvertTransform InvertTransform]
[#TreatTransformAsRegistration TreatTransformAsRegistration]
[#TreatTransformAsNative TreatTransformAsNative]
[#IsTransformRegistration IsTransformRegistration]
[#GetTransformRegistrationSource GetTransformRegistrationSource]
[#GetTransformRegistrationDest GetTransformRegistrationDest]

=== Data Collections ===

[#GetDataCollectionIDList GetDataCollectionIDList]
[#MakeDataCollection MakeDataCollection]
[#DeleteDataCollection DeleteDataCollection]
[#GetCollectionRASBounds GetCollectionRASBounds]

==== Volumes ====

[#SetUseVolumeDataToIndexTransform SetUseVolumeDataToIndexTransform]
[#GetUseVolumeDataToIndexTransform GetUseVolumeDataToIndexTransform]
[#SetVolumeAutosaveOn SetVolumeAutosaveOn]
[#GetVolumeAutosaveOn GetVolumeAutosaveOn]
[#GetRASCoordsFromVolumeSurfaceRAS GetRASCoordsFromVolumeSurfaceRAS]
[#GetVolumeSurfaceRASCoordsFromRAS GetVolumeSurfaceRASCoordsFromRAS]
[#GetVolumeAverageValueInROI GetVolumeAverageValueInROI]
[#GetVolumeStandardDeviationInROI GetVolumeStandardDeviationInROI]

===== Segmentation Volume Report =====

[#ClearSegVolReport ClearSegVolReport]
[#SetSegVolReportSegmentation SetSegVolReportSegmentation]
[#AddSegVolReportIntensityVolume AddSegVolReportIntensityVolume]
[#SetROIForSegVolReport SetROIForSegVolReport]
[#DontUseROIInSegVolReport DontUseROIInSegVolReport]
[#SetSegVolReportLUT SetSegVolReportLUT]
[#AddSegmentationToSegVolReport AddSegmentationToSegVolReport]
[#MakeSegVolReport MakeSegVolReport]
[#MakeSegVolIntensityReport MakeSegVolIntensityReport]

===== Volume Histogram =====

[#GetVolumeHistogramInView GetVolumeHistogramInView]
[#BeginValueRangeFillInView BeginValueRangeFillInView]
[#DoOneValueRangeFillInView DoOneValueRangeFillInView]
[#EndValueRangeFillInView EndValueRangeFillInView]

==== Surfaces ====

[#SetSurfaceCollectionFileName SetSurfaceCollectionFileName]
[#LoadSurfaceFromFileName LoadSurfaceFromFileName]
[#GetSurfaceCollectionFileName GetSurfaceCollectionFileName]
[#SetSurfaceDataToSurfaceTransformFromVolume SetSurfaceDataToSurfaceTransformFromVolume]
[#SetSurfaceDataToSurfaceTransformToDefault SetSurfaceDataToSurfaceTransformToDefault]
[#IsSurfaceUsingDataToSurfaceTransformFromVolume IsSurfaceUsingDataToSurfaceTransformFromVolume]
[#GetSurfaceDataToSurfaceTransformVolume GetSurfaceDataToSurfaceTransformVolume]
[#LoadSurfacePatch LoadSurfacePatch]
[#GetSurfaceUseRealRAS GetSurfaceUseRealRAS]

=== Tools ===

[#SetToolMode SetToolMode]
[#GetToolMode GetToolMode]
[#SetToolTargetLayer SetToolTargetLayer]
[#GetToolTargetLayer GetToolTargetLayer]
[#SetToolNewVoxelValue SetToolNewVoxelValue]
[#GetToolNewVoxelValue GetToolNewVoxelValue]
[#SetToolEraseVoxelValue SetToolEraseVoxelValue]
[#GetToolEraseVoxelValue GetToolEraseVoxelValue]
[#SetToolOnlyBrushZero SetToolOnlyBrushZero]
[#GetToolOnlyBrushZero GetToolOnlyBrushZero]
[#SetToolBrushRadius SetToolBrushRadius]
[#GetToolBrushRadius GetToolBrushRadius]
[#SetToolBrushShape SetToolBrushShape]
[#GetToolBrushShape GetToolBrushShape]
[#SetToolBrush3D SetToolBrush3D]
[#GetToolBrush3D GetToolBrush3D]
[#SetToolFloodStopAtPaths SetToolFloodStopAtPaths]
[#GetToolFloodStopAtPaths GetToolFloodStopAtPaths]
[#SetToolFloodStopAtROIs SetToolFloodStopAtROIs]
[#GetToolFloodStopAtROIs GetToolFloodStopAtROIs]
[#SetToolFloodFuzziness SetToolFloodFuzziness]
[#GetToolFloodFuzziness GetToolFloodFuzziness]
[#SetToolFloodMaxDistance SetToolFloodMaxDistance]
[#GetToolFloodMaxDistance GetToolFloodMaxDistance]
[#SetToolFlood3D SetToolFlood3D]
[#GetToolFlood3D GetToolFlood3D]
[#SetToolFloodSourceCollection SetToolFloodSourceCollection]
[#SetToolFloodFuzzinessType SetToolFloodFuzzinessType]
[#GetToolFloodFuzzinessType GetToolFloodFuzzinessType]
[#GetToolFloodSourceCollection GetToolFloodSourceCollection]
[#SetToolOnlyFloodZero SetToolOnlyFloodZero]
[#GetToolOnlyFloodZero GetToolOnlyFloodZero]
[#SetToolEdgePathStraightBias SetToolEdgePathStraightBias]
[#GetToolEdgePathStraightBias GetToolEdgePathStraightBias]
[#SetToolEdgePathEdgeBias SetToolEdgePathEdgeBias]
[#GetToolEdgePathEdgeBias GetToolEdgePathEdgeBias]

=== Miscellaneous ===

[#GetSubjectName GetSubjectName]
[#GetSubjectDir GetSubjectDir]
[#PrintAllCommands PrintAllCommands]
